.btns {
  position: relative;
  margin: -4px;
  display: inline-flex;
  flex-wrap: wrap;

  .btn {
    margin: 4px;
  }
}

@mixin model_btn() {
  position: relative;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  vertical-align: middle;

  min-width: 200px;

  border-radius: 50px;
  border: 0 solid transparent;
  font-family: var(--ff-main);
  line-height: 1;
  text-align: center;
  text-decoration: none;

  transition: background var(--transition), color var(--transition),
    border var(--transition);

  overflow: hidden;
  z-index: 0;
  cursor: pointer;

  &:hover,
  &:active,
  &.active {
    z-index: 10;
  }

  &:active,
  &.btn-active-effect {
    cursor: default;
  }

  &:focus-visible,
  &.btn-focus-visible-effect {
    outline: none;
    border-color: var(--secondary);
  }

  &[disabled],
  &.disabled {
    opacity: 0.5;
    outline: none !important;
    box-shadow: none !important;
    pointer-events: none;

    &:focus-visible {
      outline: none;
      border-color: transparent !important;
    }
  }

  @media screen and (max-width: 510px) {
    font-size: 14px;
  }
}

/* size */
$button-sizes: (
  mini: (
    padding: 4px 16px,
    font-size: 14px,
    min-height: 24px,
  ),
  small: (
    padding: 4px 22px,
    font-size: 14px,
    min-height: 40px,
  ),
  medium: (
    padding: 6px 26px,
    font-size: 18px,
    min-height: 56px,
  ),
  big: (
    padding: 6px 26px,
    font-size: 18px,
    min-height: 74px,
  ),
);

@mixin create-button-styles($size, $padding, $font-size, $min-height) {
  .btn-#{$size} {
    @include model_btn;
    padding: $padding;
    font-size: $font-size;
    min-height: $min-height;

    &.btn-only-icon {
      padding: 8px;
      max-width: $min-height;
      min-width: none;

      svg {
        font-size: $font-size;
      }
    }
  }
}

@each $size, $values in $button-sizes {
  $padding: map-get($values, padding);
  $font-size: map-get($values, font-size);
  $min-height: map-get($values, min-height);

  @include create-button-styles($size, $padding, $font-size, $min-height);
}

/* color */
$button-color: (
  primary: (
    bg: var(--primary),
    bg-hover: rgba(var(--primary-rgb), 0.8),
    bg-active: rgba(var(--primary-rgb), 0.8),
    bg-disabled: var(--primary),
    border-focus-width: 2px,
    font-color: var(--light),
    font-color-hover: var(--light),
    fw: 700,
  ),
  primary-light: (
    bg: rgba(var(--primary-rgb), 0.1),
    bg-hover: rgba(var(--primary-rgb), 0.2),
    bg-active: rgba(var(--primary-rgb), 0.3),
    bg-disabled: rgba(var(--primary-rgb), 0.1),
    border-focus-width: 1px,
    font-color: var(--primary),
    font-color-hover: rgba(var(--primary-rgb), 0.8),
    fw: 500,
  ),
);

@mixin create-button-color(
  $name-class,
  $bg,
  $bg-hover,
  $bg-active,
  $bg-disabled,
  $border-focus-width,
  $font-color,
  $font-color-hover,
  $fw
) {
  .btn-#{'' + $name-class} {
    background: $bg;
    color: $font-color;
    font-weight: $fw;

    &.btn-only-icon {
      svg {
        color: $font-color;
      }
    }

    &:hover,
    &.btn-hover-effect {
      background: $bg-hover;
      color: $font-color-hover;
    }

    &:active,
    &.btn-active-effect {
      background: $bg-active;
      color: $font-color;
    }

    &[disabled],
    &.disabled {
      background: $bg-disabled;
    }

    &:focus-visible,
    &.btn-focus-visible-effect {
      border-width: $border-focus-width;
    }
  }
}

@each $name-class, $values in $button-color {
  $bg: map-get($values, bg);
  $bg-hover: map-get($values, bg-hover);
  $bg-active: map-get($values, bg-active);
  $bg-disabled: map-get($values, bg-disabled);
  $border-focus-width: map-get($values, border-focus-width);
  $font-color: map-get($values, font-color);
  $font-color-hover: map-get($values, font-color-hover);
  $fw: map-get($values, fw);

  @include create-button-color(
    $name-class,
    $bg,
    $bg-hover,
    $bg-active,
    $bg-disabled,
    $border-focus-width,
    $font-color,
    $font-color-hover,
    $fw
  );
}

.btn-loader {
  color: var(--primary);

  svg {
    position: absolute;
    font-size: 2.5rem;
    color: var(--light);
  }
}
